/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bestdeal.esprit.gui;

import bestdeal.esprit.map.StaticMaps;
import java.awt.Dimension;
import java.awt.Image;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author Fahmi
 */
public class NewJFrame extends javax.swing.JFrame {
private StaticMaps ObjStaticMaps=new StaticMaps();
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        try {
            this.creerMap("tunis");
        } catch (MalformedURLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelmap = new javax.swing.JLabel();
        jCombo_type = new javax.swing.JComboBox();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(labelmap, new org.netbeans.lib.awtextra.AbsoluteConstraints(914, 438, 240, 240));

        jCombo_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "roadmap", "satellite", "hybrid", "terrain" }));
        getContentPane().add(jCombo_type, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 660, 100, -1));

        jSlider1.setMaximum(20);
        jSlider1.setMinimum(10);
        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setValue(15);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        getContentPane().add(jSlider1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 460, -1, 180));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bestdeal/esprit/image/slider-background-4.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        try {
            this.creerMap("tunis");
        } catch (MalformedURLException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jSlider1StateChanged
private void creerMap(String ch) throws MalformedURLException, UnsupportedEncodingException{
        // jSlider1.setVisible(true);
         if(!ch.isEmpty()){
             
             Image imageMap=ObjStaticMaps.getStaticMap(ch,
                     Integer.valueOf(jSlider1.getValue()),new Dimension(240,240),
                     10,this.SelectionerFormat(),
                     this.SelectionnerTypeMap());
            if(imageMap!=null){
                ImageIcon imgIcon=new ImageIcon(imageMap);
                Icon iconImage=(Icon)imgIcon;
                labelmap.setIcon(iconImage);
            }
         }
     }
 private StaticMaps.Maptype SelectionnerTypeMap(){
        StaticMaps.Maptype type= StaticMaps.Maptype.roadmap;
        switch(jCombo_type.getSelectedItem().toString()){
            case "roadmap":
                type= StaticMaps.Maptype.roadmap;
                break;
            case "satellite":
                type= StaticMaps.Maptype.satellite;
                break;
            case "hybrid":
                type= StaticMaps.Maptype.hybrid;
                break;
            case "terrain":
                type= StaticMaps.Maptype.terrain;
                break;
        }
        return type;
    } 
 private StaticMaps.Format SelectionerFormat(){
        StaticMaps.Format format= StaticMaps.Format.jpg;
        return format;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jCombo_type;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel labelmap;
    // End of variables declaration//GEN-END:variables
}
